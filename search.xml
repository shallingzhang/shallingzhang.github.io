<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo+Github搭建个人博客</title>
    <url>/2022/08/26/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><h3 id="什么是-Hexo-？"><a href="#什么是-Hexo-？" class="headerlink" title="什么是 Hexo ？"></a>什么是 Hexo ？</h3><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<h3 id="什么是-GitHub-Pages-？"><a href="#什么是-GitHub-Pages-？" class="headerlink" title="什么是 GitHub Pages ？"></a>什么是 GitHub Pages ？</h3><p>GitHub Pages 是由 GitHub 官方提供的一种免费的静态站点托管服务，让我们可以在 GitHub 仓库里托管和发布自己的静态网站页面。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="安装准备"><a href="#安装准备" class="headerlink" title="安装准备"></a>安装准备</h3><p>Hexo 基于 Node.js，搭建过程中还需要使用 npm（Node.js 已带） 和 git，因此先搭建本地操作环境，以 Linux 操作系统为例，安装 Node.js 和 Git。</p>
<ul>
<li>Node.js：<a href="https://nodejs.org/zh-cn">https://nodejs.org/zh-cn</a></li>
<li>Git：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></li>
</ul>
<h4 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h4><ol>
<li><p>从官网下载 Node.js 长期维护版安装包 , 例如：node-v16.14.2-linux-x64.tar.xz</p>
</li>
<li><p>新建～&#x2F;software文件夹，解压 Node.js 安装包文件到～&#x2F;software文件夹下</p>
</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ mkdir ~/software</span><br><span class="line">$ tar -Jxf node-v16.14.2-linux-x64.tar.xz -C ~/software</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>解压文件的 bin 目录底下包含了 node、npm 等命令，我们可以使用 ln 命令来设置软连接：</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ mv ~/software/node-v16.14.2-linux-x64 ~/software/nodejs</span><br><span class="line">$ sudo ln -s /home/username/software/nodejs/bin/npm /usr/local/bin/ </span><br><span class="line">$ sudo ln -s /home/username/software/nodejs/bin/node /usr/local/bin/</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>查看 node.js 和 npm 软件版本，以检验是否安装成功。</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ node -v</span><br><span class="line">v16.14.2</span><br><span class="line">$ npm -v</span><br><span class="line">8.5.0</span><br></pre></td></tr></table></figure>

<h4 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h4><ol>
<li>Linux (Deepin,Ubuntu, Debian)：在系统终端命令安装 git 软件</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install git-core</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>查看 git 软件版本，以检验是否安装成功，在终端输入 git - -version 并回车，如下图出现程序版本号即可。</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git --version</span><br><span class="line">git version 2.20.1</span><br></pre></td></tr></table></figure>

<span id="more"></span>


<h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><ol>
<li>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>Hexo 安装完成以后，使用 ln 命令来设置软连接</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo ln -s /home/username/software/nodejs/bin/hexo /usr/local/bin/</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>查看 Hexo 软件版本，以检验是否安装成功。</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo -v</span><br><span class="line">hexo: 6.2.0</span><br><span class="line">hexo-cli: 4.3.0</span><br><span class="line">os: linux 5.17.3-amd64-desktop Deepin 20.6 20.6</span><br><span class="line">node: 16.14.2</span><br><span class="line">v8: 9.4.146.24-node.20</span><br><span class="line">uv: 1.43.0</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">brotli: 1.0.9</span><br><span class="line">ares: 1.18.1</span><br><span class="line">modules: 93</span><br><span class="line">nghttp2: 1.45.1</span><br><span class="line">napi: 8</span><br><span class="line">llhttp: 6.0.4</span><br><span class="line">openssl: 1.1.1n+quic</span><br><span class="line">cldr: 40.0</span><br><span class="line">icu: 70.1</span><br><span class="line">tz: 2021a3</span><br><span class="line">unicode: 14.0</span><br><span class="line">ngtcp2: 0.1.0-DEV</span><br><span class="line">nghttp3: 0.1.0-DEV</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h3 id="升级-Hexo"><a href="#升级-Hexo" class="headerlink" title="升级 Hexo"></a>升级 Hexo</h3><p>官方强烈建议安装最新版本的 Hexo，以及推荐的 Node.js 版本。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ npm update -g hexo-cli     # 升级 hexo 软件到最新版</span><br></pre></td></tr></table></figure>

<p>软件兼容适配表</p>
<table>
<thead>
<tr>
<th>Hexo 版本</th>
<th>最低兼容 Node.js 版本</th>
</tr>
</thead>
<tbody><tr>
<td>6.0+</td>
<td>12.13.0</td>
</tr>
<tr>
<td>5.0+</td>
<td>10.13.0</td>
</tr>
<tr>
<td>4.1 - 4.2</td>
<td>8.10</td>
</tr>
<tr>
<td>4.0</td>
<td>8.6</td>
</tr>
<tr>
<td>3.3 - 3.9</td>
<td>6.9</td>
</tr>
<tr>
<td>3.2 - 3.3</td>
<td>0.12</td>
</tr>
<tr>
<td>3.0 - 3.1</td>
<td>0.10 or iojs</td>
</tr>
<tr>
<td>0.0.1 - 2.8</td>
<td>0.10</td>
</tr>
</tbody></table>
<h2 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h2><h3 id="创建博客目录"><a href="#创建博客目录" class="headerlink" title="创建博客目录"></a>创建博客目录</h3><p>在家目录创建个人博客文件夹 blog_folder</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir ~/blog_folder</span><br></pre></td></tr></table></figure>
<h3 id="生成网页文件"><a href="#生成网页文件" class="headerlink" title="生成网页文件"></a>生成网页文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd ~</span><br><span class="line">$ hexo init blog_folder      # 初始化博客目录文件</span><br><span class="line">$ cd blog_folder             # 进入博客目录</span><br><span class="line">$ npm install                # 安装程序组件</span><br><span class="line">$ hexo generate              # 生成静态文件</span><br><span class="line">$ hexo server                # 启动网站服务</span><br></pre></td></tr></table></figure>

<h3 id="浏览本地站点"><a href="#浏览本地站点" class="headerlink" title="浏览本地站点"></a>浏览本地站点</h3><p>使用浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a> ,出现 Hexo 默认页面，代表本地博客安装成功了<br><img src="/uploads/hexo_default_mainpage.png" alt="hexo默认主页" title="hexo默认主页"></p>
<blockquote>
<p>注意：如果出现页面加载不出来，可能是默认端口被占用了，<br>终端执行快捷键 Ctrl+C 关闭服务器，重新运行 hexo server -p 6000 更改端口号，<br>重新使用浏览器访问 <a href="http://localhost:6000/">http://localhost:6000</a> ，查看是否出现 Hexo 默认页面。</p>
</blockquote>
<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h3 id="注册-Github-帐号"><a href="#注册-Github-帐号" class="headerlink" title="注册 Github 帐号"></a>注册 Github 帐号</h3><p>进入 github 的官网：<a href="https://github.com/">https://github.com/</a> 在主页“Email Address”处输入自己的邮箱，然后点击“Sign up for  Github ” 按钮，输入将来登录Github的密码，注册属于自己的帐号。</p>
<blockquote>
<p>注意：</p>
<p>1、用户名：起名字要慎重，建议用有自己特色、简单易记不重复的，它将决定你博客的网络地址、仓库名称等。<br>2、电子邮箱地址：不要乱填，填写你真实的常用邮箱，注册时Github是要发激活链接到你邮箱的。<br>3、用户密码：不少于8个字符（ 包括数字和字母），输入完会有一个人机验证，你只需把图片矫正即可。</p>
<p>4、账户类型：选择个人免费版。</p>
<p>5、问卷调查：选择你感兴趣的信息。</p>
<p>6、验证邮箱：登录注册邮箱，完成帐号激活。</p>
</blockquote>
<h3 id="创建-Github-Pages-仓库"><a href="#创建-Github-Pages-仓库" class="headerlink" title="创建 Github Pages 仓库"></a>创建 Github Pages 仓库</h3><ol>
<li>使用已经注册的帐号登录Github网站，然后点击页面右上角的加号–&gt;New repository.</li>
<li>Owner: “Github用户名”，Repository name：“Github用户名.github.io”</li>
<li>勾选 “Initialize this repository with” 下方的 “Add a README file” 选项。</li>
<li>填写以上内容后，点击 “Create repository ” 按钮创建仓库。</li>
</ol>
<p><img src="/uploads/create_blog_repository.png" alt="创建仓库" title="github pages 仓库"></p>
<h3 id="配置-Git-连接-Github-Pages-远程仓库"><a href="#配置-Git-连接-Github-Pages-远程仓库" class="headerlink" title="配置 Git 连接 Github Pages 远程仓库"></a>配置 Git 连接 Github Pages 远程仓库</h3><ol>
<li>在 Linux 操作系统下配置 Git 用户信息，打开命令终端窗口，输入如下命令：</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name &quot;GitHub 用户名&quot;</span><br><span class="line">$ git config --global user.email &quot;GitHub 邮箱&quot;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>安装ssh软件，创建ssh密钥：</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo apt install ssh                   # 安装软件</span><br><span class="line">$ ssh-keygen -t rsa -C &quot;GitHub 邮箱&quot;      # 创建密钥，然后一路默认回车</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>查看 ssh 密钥：id_rsa 为私钥，id_rsa.pub 为公钥.</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ ls ~/.ssh</span><br><span class="line">id_rsa  id_rsa.pub </span><br></pre></td></tr></table></figure>

<ol start="4">
<li>打开 id_rsa.pub 文件，复制 ssh 公钥内容到剪贴板：</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ vim ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>添加 ssh 公钥到Github上：</li>
</ol>
<ul>
<li>登陆 GitHub 网站，点击页面右上角头像，从弹出菜单进入 Settings 页面。</li>
<li>然后选择左边栏的 SSH and GPG keys，点击 New SSH key。</li>
<li>Title 随便填写个英文名字，粘贴复制的 id_rsa.pub 内容到 Key 中。</li>
<li>最后点击 Add SSH key 按钮完成添加。</li>
</ul>
<p><img src="/uploads/add_ssh_key.png" alt="添加ssh公钥" title="添加ssh公钥"></p>
<ol start="6">
<li>验证连接：打开终端，输入 ssh -T <a href="mailto:&#x67;&#x69;&#x74;&#64;&#103;&#105;&#116;&#104;&#117;&#x62;&#46;&#99;&#111;&#x6d;">&#x67;&#x69;&#x74;&#64;&#103;&#105;&#116;&#104;&#117;&#x62;&#46;&#99;&#111;&#x6d;</a> 命令</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<p>出现 “Are you sure you want to continue connecting ? ”，输入 yes 回车确认，</p>
<p>最后显示 “Hi username ! You’ve successfully authenticated……” 即连接成功。</p>
<ol start="7">
<li>配置个人令牌：</li>
</ol>
<p>由于 github 在 2021 年 8 月 13日将原有的用户密码验证方式替换成了”personal access token”，因此我们这里需要将用户密码替换成”personal access token”，用于部署Hexo 到 GitHub Pages 时验证用户身份。</p>
<ul>
<li>登录Github网站，进入“Settings–&gt;Developer Settings–&gt;Personal access tokens–&gt;Generate new Token”</li>
<li>输入 Note：hexo blog，Expiration：30 days，Select Scopes：选择 repo 。</li>
<li>点击页面底部的 ”Generate Token“ 按钮，生成个人令牌。</li>
<li>复制个人令牌内容，保存成文档文件留存，供以后验证身份时使用。</li>
</ul>
<p><img src="/uploads/personal_access_token.png" alt="个人令牌" title="个人令牌"></p>
<ul>
<li>如果您有令牌，则可以在通过 Https 执行 Git 操作时输入令牌，而不是密码。例如，在命令行中输入以下内容：拷贝一个 Git 仓库到本地。</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git clone https://github.com/username/repo.git</span><br><span class="line">Username: your_username</span><br><span class="line">Password: your_token</span><br></pre></td></tr></table></figure>


<h3 id="部署Hexo-到-GitHub-Pages"><a href="#部署Hexo-到-GitHub-Pages" class="headerlink" title="部署Hexo 到 GitHub Pages"></a>部署Hexo 到 GitHub Pages</h3><p>本地博客测试成功后，就是上传到 GitHub 进行部署，使其能够在网络上访问。</p>
<ol>
<li>首先安装 hexo-deployer-git 插件程序：</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd ~/blog_folder</span><br><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>然后修改~&#x2F;blog_folder&#x2F;_config.yml 文件末尾的 Deployment 部分，修改成如下：</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git    # 部署类型   </span><br><span class="line">  repo: https://github.com/&lt;username&gt;/&lt;project&gt;  # 仓库地址</span><br><span class="line">  # example, https://github.com/shallingzhang/shallingzhang.github.io</span><br><span class="line">  branch: main  # 分支名称</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>运行 hexo deploy 将网站上传部署到 GitHub Pages。</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd ~/blog_folder</span><br><span class="line">$ hexo clean &amp;&amp; hexo deploy   # 清除缓存和上传部署</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>查看域名 https:&#x2F;&#x2F;用户名.github.io 如果可以看到 Hexo 网站，说明 GitHub 上的网页部署成功了。</li>
</ol>
<p><img src="/uploads/hexo_landscape_theme.png" alt="hexo默认主题" title="hexo默认主题"></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/08/19/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
