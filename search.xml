<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo+Github搭建个人博客</title>
    <url>/2022/08/26/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><h3 id="什么是-Hexo-？"><a href="#什么是-Hexo-？" class="headerlink" title="什么是 Hexo ？"></a>什么是 Hexo ？</h3><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<h3 id="什么是-GitHub-Pages-？"><a href="#什么是-GitHub-Pages-？" class="headerlink" title="什么是 GitHub Pages ？"></a>什么是 GitHub Pages ？</h3><p>GitHub Pages 是由 GitHub 官方提供的一种免费的静态站点托管服务，让我们可以在 GitHub 仓库里托管和发布自己的静态网站页面。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="安装准备"><a href="#安装准备" class="headerlink" title="安装准备"></a>安装准备</h3><p>Hexo 基于 Node.js，搭建过程中还需要使用 npm（Node.js 已带） 和 git，因此先搭建本地操作环境，以 Linux 操作系统为例，安装 Node.js 和 Git。</p>
<ul>
<li>Node.js：<a href="https://nodejs.org/zh-cn">https://nodejs.org/zh-cn</a></li>
<li>Git：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></li>
</ul>
<h4 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h4><ol>
<li><p>从官网下载 Node.js 长期维护版安装包 , 例如：node-v16.14.2-linux-x64.tar.xz</p>
</li>
<li><p>新建～&#x2F;software文件夹，解压 Node.js 安装包文件到～&#x2F;software文件夹下</p>
</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ mkdir ~/software</span><br><span class="line">$ tar -Jxf node-v16.14.2-linux-x64.tar.xz -C ~/software</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>解压文件的 bin 目录底下包含了 node、npm 等命令，我们可以使用 ln 命令来设置软连接：</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ mv ~/software/node-v16.14.2-linux-x64 ~/software/nodejs</span><br><span class="line">$ sudo ln -s /home/username/software/nodejs/bin/npm /usr/local/bin/ </span><br><span class="line">$ sudo ln -s /home/username/software/nodejs/bin/node /usr/local/bin/</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>查看 node.js 和 npm 软件版本，以检验是否安装成功。</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ node -v</span><br><span class="line">v16.14.2</span><br><span class="line">$ npm -v</span><br><span class="line">8.5.0</span><br></pre></td></tr></table></figure>

<h4 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h4><ol>
<li>Linux (Deepin,Ubuntu, Debian)：在系统终端命令安装 git 软件</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install git</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>查看 git 软件版本，以检验是否安装成功，在终端输入 git - -version 并回车，如下图出现程序版本号即可。</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git --version</span><br><span class="line">git version 2.20.1</span><br></pre></td></tr></table></figure>

<span id="more"></span>


<h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><ol>
<li>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>Hexo 安装完成以后，使用 ln 命令来设置软连接</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo ln -s /home/username/software/nodejs/bin/hexo /usr/local/bin/</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>查看 Hexo 软件版本，以检验是否安装成功。</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo -v</span><br><span class="line">hexo: 6.2.0</span><br><span class="line">hexo-cli: 4.3.0</span><br><span class="line">os: linux 5.17.3-amd64-desktop Deepin 20.6 20.6</span><br><span class="line">node: 16.14.2</span><br><span class="line">v8: 9.4.146.24-node.20</span><br><span class="line">uv: 1.43.0</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">brotli: 1.0.9</span><br><span class="line">ares: 1.18.1</span><br><span class="line">modules: 93</span><br><span class="line">nghttp2: 1.45.1</span><br><span class="line">napi: 8</span><br><span class="line">llhttp: 6.0.4</span><br><span class="line">openssl: 1.1.1n+quic</span><br><span class="line">cldr: 40.0</span><br><span class="line">icu: 70.1</span><br><span class="line">tz: 2021a3</span><br><span class="line">unicode: 14.0</span><br><span class="line">ngtcp2: 0.1.0-DEV</span><br><span class="line">nghttp3: 0.1.0-DEV</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h3 id="升级-Hexo"><a href="#升级-Hexo" class="headerlink" title="升级 Hexo"></a>升级 Hexo</h3><p>官方强烈建议安装最新版本的 Hexo，以及推荐的 Node.js 版本。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ npm update -g hexo-cli     # 升级 hexo 软件到最新版</span><br></pre></td></tr></table></figure>

<p>软件兼容适配表</p>
<table>
<thead>
<tr>
<th>Hexo 版本</th>
<th>最低兼容 Node.js 版本</th>
</tr>
</thead>
<tbody><tr>
<td>6.0+</td>
<td>12.13.0</td>
</tr>
<tr>
<td>5.0+</td>
<td>10.13.0</td>
</tr>
<tr>
<td>4.1 - 4.2</td>
<td>8.10</td>
</tr>
<tr>
<td>4.0</td>
<td>8.6</td>
</tr>
<tr>
<td>3.3 - 3.9</td>
<td>6.9</td>
</tr>
<tr>
<td>3.2 - 3.3</td>
<td>0.12</td>
</tr>
<tr>
<td>3.0 - 3.1</td>
<td>0.10 or iojs</td>
</tr>
<tr>
<td>0.0.1 - 2.8</td>
<td>0.10</td>
</tr>
</tbody></table>
<h2 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h2><h3 id="创建博客目录"><a href="#创建博客目录" class="headerlink" title="创建博客目录"></a>创建博客目录</h3><p>在家目录创建个人博客文件夹 blog_folder</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir ~/blog_folder</span><br></pre></td></tr></table></figure>
<h3 id="生成网页文件"><a href="#生成网页文件" class="headerlink" title="生成网页文件"></a>生成网页文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd ~</span><br><span class="line">$ hexo init blog_folder      # 初始化博客目录文件</span><br><span class="line">$ cd blog_folder             # 进入博客目录</span><br><span class="line">$ npm install                # 安装程序组件</span><br><span class="line">$ hexo generate              # 生成静态文件</span><br><span class="line">$ hexo server                # 启动网站服务</span><br></pre></td></tr></table></figure>

<h3 id="浏览本地站点"><a href="#浏览本地站点" class="headerlink" title="浏览本地站点"></a>浏览本地站点</h3><p>使用浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a> ,出现 Hexo 默认页面，代表本地博客安装成功了<br><img src="/uploads/hexo_default_mainpage.png" alt="hexo默认主页" title="hexo默认主页"></p>
<blockquote>
<p>注意：如果出现页面加载不出来，可能是默认端口被占用了，<br>终端执行快捷键 Ctrl+C 关闭服务器，重新运行 hexo server -p 6000 更改端口号，<br>重新使用浏览器访问 <a href="http://localhost:6000/">http://localhost:6000</a> ，查看是否出现 Hexo 默认页面。</p>
</blockquote>
<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h3 id="注册-Github-帐号"><a href="#注册-Github-帐号" class="headerlink" title="注册 Github 帐号"></a>注册 Github 帐号</h3><p>进入 github 的官网：<a href="https://github.com/">https://github.com/</a> 在主页“Email Address”处输入自己的邮箱，然后点击“Sign up for  Github ” 按钮，输入将来登录Github的密码，注册属于自己的帐号。</p>
<blockquote>
<p>注意：</p>
<p>1、用户名：起名字要慎重，建议用有自己特色、简单易记不重复的，它将决定你博客的网络地址、仓库名称等。<br>2、电子邮箱地址：不要乱填，填写你真实的常用邮箱，注册时Github是要发激活链接到你邮箱的。<br>3、用户密码：不少于8个字符（ 包括数字和字母），输入完会有一个人机验证，你只需把图片矫正即可。</p>
<p>4、账户类型：选择个人免费版。</p>
<p>5、问卷调查：选择你感兴趣的信息。</p>
<p>6、验证邮箱：登录注册邮箱，完成帐号激活。</p>
</blockquote>
<h3 id="创建-Github-Pages-仓库"><a href="#创建-Github-Pages-仓库" class="headerlink" title="创建 Github Pages 仓库"></a>创建 Github Pages 仓库</h3><ol>
<li>使用已经注册的帐号登录Github网站，然后点击页面右上角的加号–&gt;New repository.</li>
<li>Owner: “Github用户名”，Repository name：“Github用户名.github.io”</li>
<li>勾选 “Initialize this repository with” 下方的 “Add a README file” 选项。</li>
<li>填写以上内容后，点击 “Create repository ” 按钮创建仓库。</li>
</ol>
<p><img src="/uploads/create_blog_repository.png" alt="创建仓库" title="github pages 仓库"></p>
<h3 id="配置-Git-连接-Github-Pages-远程仓库"><a href="#配置-Git-连接-Github-Pages-远程仓库" class="headerlink" title="配置 Git 连接 Github Pages 远程仓库"></a>配置 Git 连接 Github Pages 远程仓库</h3><ol>
<li>在 Linux 操作系统下配置 Git 用户信息，打开命令终端窗口，输入如下命令：</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name &quot;GitHub 用户名&quot;</span><br><span class="line">$ git config --global user.email &quot;GitHub 邮箱&quot;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>安装ssh软件，创建ssh密钥：</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo apt install ssh                   # 安装软件</span><br><span class="line">$ ssh-keygen -t rsa -C &quot;GitHub 邮箱&quot;      # 创建密钥，然后一路默认回车</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>查看 ssh 密钥：id_rsa 为私钥，id_rsa.pub 为公钥.</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ ls ~/.ssh</span><br><span class="line">id_rsa  id_rsa.pub </span><br></pre></td></tr></table></figure>

<ol start="4">
<li>打开 id_rsa.pub 文件，复制 ssh 公钥内容到剪贴板：</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ vim ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>添加 ssh 公钥到Github上：</li>
</ol>
<ul>
<li>登陆 GitHub 网站，点击页面右上角头像，从弹出菜单进入 Settings 页面。</li>
<li>然后选择左边栏的 SSH and GPG keys，点击 New SSH key。</li>
<li>Title 随便填写个英文名字，粘贴复制的 id_rsa.pub 内容到 Key 中。</li>
<li>最后点击 Add SSH key 按钮完成添加。</li>
</ul>
<p><img src="/uploads/add_ssh_key.png" alt="添加ssh公钥" title="添加ssh公钥"></p>
<ol start="6">
<li>验证连接：打开终端，输入 ssh -T <a href="mailto:&#103;&#105;&#116;&#64;&#103;&#x69;&#x74;&#104;&#117;&#x62;&#46;&#99;&#x6f;&#x6d;">&#103;&#105;&#116;&#64;&#103;&#x69;&#x74;&#104;&#117;&#x62;&#46;&#99;&#x6f;&#x6d;</a> 命令</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<p>出现 “Are you sure you want to continue connecting ? ”，输入 yes 回车确认，</p>
<p>最后显示 “Hi username ! You’ve successfully authenticated……” 即连接成功。</p>
<ol start="7">
<li>配置个人令牌：</li>
</ol>
<p>由于 github 在 2021 年 8 月 13日将原有的用户密码验证方式替换成了”personal access token”，因此我们这里需要将用户密码替换成”personal access token”，用于部署Hexo 到 GitHub Pages 时验证用户身份。</p>
<ul>
<li>登录Github网站，进入“Settings–&gt;Developer Settings–&gt;Personal access tokens–&gt;Generate new Token”</li>
<li>输入 Note：hexo blog，Expiration：30 days，Select Scopes：选择 repo 。</li>
<li>点击页面底部的 ”Generate Token“ 按钮，生成个人令牌。</li>
<li>复制个人令牌内容，保存成文档文件留存，供以后验证身份时使用。</li>
</ul>
<p><img src="/uploads/personal_access_token.png" alt="个人令牌" title="个人令牌"></p>
<ul>
<li>如果您有令牌，则可以在通过 Https 执行 Git 操作时输入令牌，而不是密码。例如，在命令行中输入以下内容：拷贝一个 Git 仓库到本地。</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git clone https://github.com/username/repo.git</span><br><span class="line">Username: your_username</span><br><span class="line">Password: your_token</span><br></pre></td></tr></table></figure>


<h3 id="部署Hexo-到-GitHub-Pages"><a href="#部署Hexo-到-GitHub-Pages" class="headerlink" title="部署Hexo 到 GitHub Pages"></a>部署Hexo 到 GitHub Pages</h3><p>本地博客测试成功后，就是上传到 GitHub 进行部署，使其能够在网络上访问。</p>
<ol>
<li>首先安装 hexo-deployer-git 插件程序：</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd ~/blog_folder</span><br><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>然后修改~&#x2F;blog_folder&#x2F;_config.yml 文件末尾的 Deployment 部分，修改成如下：</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git       # 部署类型   </span><br><span class="line">  repo: https://github.com/&lt;username&gt;/&lt;project&gt;  # 仓库地址</span><br><span class="line">  # example, https://github.com/shallingzhang/shallingzhang.github.io</span><br><span class="line">  branch: main    # 分支名称</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>运行 hexo deploy 将网站上传部署到 GitHub Pages。</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd ~/blog_folder</span><br><span class="line">$ hexo clean      # 清除缓存</span><br><span class="line">$ hexo generate   # 生成页面</span><br><span class="line">$ hexo deploy     # 上传部署</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>查看域名 https:&#x2F;&#x2F;用户名.github.io 如果可以看到 Hexo 网站，说明 GitHub 上的网页部署成功了。</li>
</ol>
<p><img src="/uploads/hexo_landscape_theme.png" alt="hexo默认主题" title="hexo默认主题"></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo+Next主题美化博客</title>
    <url>/2022/08/31/Hexo-Next%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>有了前面那篇如何搭建博客的文章介绍指导，我们现在可以很容易的搭建博客了，不过既然是属于自己的博客网站，自然也就想让其更加美观，Hexo 博客支持很多主题风格，官网 <a href="https://hexo.io/themes/">https://hexo.io/themes/</a> 截止目前拥370个不同风格的主题，下面介绍一下Hexo博客的主题美化操作。</p>
<p>Next 主题 <a href="https://theme-next.js.org/">https://theme-next.js.org/</a> 是为 Hexo 打造的一款高品质优雅主题，支持非常多的外部插件和功能选项。我目前使用的是 NexT.Gemini V8.12.3 版本，下面我会介绍关于 Next 8 主题的基本安装配置和界面美化。</p>
<span id="more"></span>

<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>确保你已经安装了Hexo 并成功地创建了一个站点，因为以下文档要求你在站点根目录(blog_folder)下操作。</p>
<h3 id="安装-Next-主题"><a href="#安装-Next-主题" class="headerlink" title="安装 Next 主题"></a>安装 Next 主题</h3><p>安装 Hexo 主题的2种方式: </p>
<ol>
<li><p>打开终端，切换到 Hexo 站点根目录，通过 npm 安装 Next 主题:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd blog_folder</span><br><span class="line">$ npm install hexo-theme-next</span><br></pre></td></tr></table></figure>
</li>
<li><p>打开终端，切换到 Hexo 站点根目录，使用 git下载 Next 主题的源代码:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd blog_folder</span><br><span class="line">$ git clone https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="升级-Next-主题"><a href="#升级-Next-主题" class="headerlink" title="升级 Next 主题"></a>升级 Next 主题</h3><p>Next 主题的新版本每月发布一次，请在更新主题前阅读发布说明，可以使用以下命令更新Next主题：</p>
<ol>
<li><p>通过npm安装最新版本:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd hexo-site</span><br><span class="line">$ npm install hexo-theme-next@latest</span><br></pre></td></tr></table></figure>
</li>
<li><p>或者更新到最新的主分支:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd blog_folder</span><br><span class="line">$ cd themes/next</span><br><span class="line">$ git pull origin master</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>通过修改配置文件可以直接修改主题样式Git</p>
<h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>在安装 Hexo 和 Next 之后，你可能会发现有两个配置文件被 Hexo 使用，它们都被称为 _config.yml:</p>
<ol>
<li><p>第一个在站点根目录 blog_folder下，它包含了Hexo的配置。</p>
</li>
<li><p>第二个在主题根目录下(例如：thems&#x2F;next&#x2F;_config. yml 或 node_modules&#x2F;hexo-theme-next&#x2F;_config.yml)。它由 Next 提供，包含主题的配置。</p>
</li>
</ol>
<p>让我们把第一个文件叫做 Hexo配置文件，把第二个文件叫做 Next 配置文件。</p>
<blockquote>
<p>注意：npm方式安装主题，默认配置文件在node_modules&#x2F;hexo-theme-next&#x2F;_config.yml，git方式安装主题，默认配置文件在themes&#x2F;next&#x2F;_config.yml </p>
</blockquote>
<p>但是，不建议直接修改主题配置文件，因为通过git或npm升级下一个版本主题时，配置文件会被覆盖，那如何解决这个问题呢？</p>
<ol>
<li>请确保你使用的是 Hexo 5.0或更高版本。</li>
<li>在站点的根目录下创建一个配置文件：_config.next.yml。</li>
<li>将所需的Next主题选项从NexT配置文件复制到此配置文件。</li>
</ol>
<p>如果是第一次安装 Next，则使用以下命令复制整个NexT配置文件即可:</p>
   <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Installed through npm</span><br><span class="line">cp node_modules/hexo-theme-next/_config.yml _config.next.yml</span><br><span class="line"></span><br><span class="line"># Installed through </span><br><span class="line">cp themes/next/_config.yml _config.next.yml</span><br></pre></td></tr></table></figure>

<p>以后所有配置只需要更改站点根目录下的_config.yml和 _config.next.yml两个配置文件就可以了，升级Next时也不会受影响。</p>
<h3 id="Hexo-基本配置"><a href="#Hexo-基本配置" class="headerlink" title="Hexo 基本配置"></a>Hexo 基本配置</h3><p><strong>更改站点根目录下的 _config.yml 文件</strong></p>
<ol>
<li><p>站点基本配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Hexo Configuration</span><br><span class="line">## Docs: https://hexo.io/docs/configuration.html</span><br><span class="line">## Source: https://github.com/hexojs/hexo/</span><br><span class="line"></span><br><span class="line"># Site                      # 站点配置</span><br><span class="line">title: Shalling&#x27;s Blog      # 网站标题</span><br><span class="line">subtitle: &#x27;新时代农民工&#x27;      # 网站副标题</span><br><span class="line">description: &#x27;Stay hungry,Stay foolish.&#x27;    # 网站描述</span><br><span class="line">keywords:</span><br><span class="line">author: Shalling Zhang      # 作者昵称</span><br><span class="line">language: zh-CN             # 显示语言</span><br><span class="line">timezone: &#x27;Asia/Shanghai&#x27;   # 所在时区</span><br></pre></td></tr></table></figure>
</li>
<li><p>启用 Next 主题</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">#theme: landscape   # 禁用默认主题</span><br><span class="line">theme: next         # 启用next主题</span><br></pre></td></tr></table></figure>
</li>
<li><p>更改 Hexo 配置文件后，需要重新生成站点文件，新的主题样式才能生效。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd ~/blog_folder</span><br><span class="line">$ hexo clean</span><br><span class="line">$ hexo generate</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></li>
</ol>
<p>Hexo is running at <a href="http://localhost:4000/">http://localhost:4000/</a> . Press Ctrl+C to stop.</p>
<h3 id="Next-基本配置"><a href="#Next-基本配置" class="headerlink" title="Next 基本配置"></a>Next 基本配置</h3><p><strong>更改站点根目录下的 _config.next.yml 文件</strong></p>
<ol>
<li><p>主题风格方案配置</p>
<p>Next主题自带4种不同的风格方案，取消哪个方案名称前面的#注释，即采用该方案</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Scheme Settings   </span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Schemes       # 主题方案（Muse、Mist、Pisces、Gemini 共4种，可任选1种）</span><br><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">scheme: Gemini  # 采用 Gemini 方案</span><br></pre></td></tr></table></figure>
</li>
<li><p>开启夜间模式</p>
<p>夜间模式没有独立切换开关，会跟随系统主题自动切换显示效果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Dark Mode</span><br><span class="line">darkmode: true  # true开启，false关闭</span><br></pre></td></tr></table></figure>
</li>
<li><p>自定义网站图标</p>
<p>在站点根目录下的source目录新建_uploads文件夹用于存放站点图片资源</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">favicon:</span><br><span class="line">  # small: /images/favicon-16x16-next.png</span><br><span class="line">  # medium: /images/favicon-32x32-next.png</span><br><span class="line">  # apple_touch_icon: /images/apple-touch-icon-next.png</span><br><span class="line">  # safari_pinned_tab: /images/logo.svg</span><br><span class="line">  small: /uploads/favicon-16x16-next.png    # 网站图标路径</span><br><span class="line">  medium: /uploads/favicon-32x32-next.png   # 网站图标路径</span><br><span class="line">  apple_touch_icon: /uploads/apple-touch-icon-next.png</span><br><span class="line">  safari_pinned_tab: /uploads/logo.svg</span><br><span class="line">  #android_manifest: /manifest.json</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置 “知识共享国际许可协议”</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Creative Commons 4.0 International License.</span><br><span class="line"># See: https://creativecommons.org/about/cclicenses/</span><br><span class="line">creative_commons:</span><br><span class="line">  # Available values: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | cc-zero</span><br><span class="line">  license: by-nc-sa   # license 值</span><br><span class="line">  # Available values: big | small</span><br><span class="line">  size: small         # 显示大小</span><br><span class="line">  sidebar: true       # 侧边栏是否显示</span><br><span class="line">  post: true          # 文章是否显示</span><br><span class="line">  # You can set a language value if you prefer a translated version of CC license, e.g. deed.zh</span><br><span class="line">  # CC licenses are available in 39 languages, you can find the specific and correct abbreviation you need on https://creativecommons.org</span><br><span class="line">  language: deed.zh   # 中文</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置网站菜单栏</p>
<p>新增加菜单项，需要新增加对应的页面，</p>
<p>首先，取消 about、tags、categories前面的#注释符号</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || fa fa-home                      # 首页</span><br><span class="line">  about: /about/ || fa fa-user               # 关于</span><br><span class="line">  tags: /tags/ || fa fa-tags                 # 标签</span><br><span class="line">  categories: /categories/ || fa fa-th       # 分类</span><br><span class="line">  archives: /archives/ || fa fa-archive      # 归档</span><br><span class="line">  #schedule: /schedule/ || fa fa-calendar</span><br><span class="line">  #sitemap: /sitemap.xml || fa fa-sitemap</span><br><span class="line">  #commonweal: /404/ || fa fa-heartbeat</span><br></pre></td></tr></table></figure>

<p>其次，新增about、tags、categories页面</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo new page about           # 新增 about 页面</span><br><span class="line">$ hexo new page tags            # 新增 tags  页面</span><br><span class="line">$ hexo new page categories      # 新增 categories 页面</span><br></pre></td></tr></table></figure>

<p>在站点根目录source&#x2F;_posts&#x2F;下会生成tags、categories、about三个文件夹，每个文件夹中都有一个index.md文件，接下来分别修改每个文件内容。</p>
<p> 标签页</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2022-08-19 11:06:30</span><br><span class="line">type: tags</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p> 分类页</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2022-08-19 11:06:43</span><br><span class="line">type: categories</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p> 关于页</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 关于</span><br><span class="line">date: 2022-08-19 11:06:23</span><br><span class="line">type: about</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
</li>
<li><p>侧边栏位置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sidebar:</span><br><span class="line">  # Sidebar Position.</span><br><span class="line">  # position: left     # 页面左侧</span><br><span class="line">  position: right      # 页面右侧</span><br></pre></td></tr></table></figure>
</li>
<li><p>更改网站默认头像</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">avatar:</span><br><span class="line">  # Replace the default image and set the url here.</span><br><span class="line">  #url: /images/avatar.gif</span><br><span class="line">  url: /uploads/avatar.png  # 头像图片位置</span><br><span class="line">  # If true, the avatar will be displayed in circle.</span><br><span class="line">  rounded: false   # true 头像外边框显示圆形</span><br><span class="line">  # If true, the avatar will be rotated with the cursor.</span><br><span class="line">  rotated: false   # 鼠标悬浮，图片旋转</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置社交链接图标</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/shallingzhang || fab fa-github</span><br><span class="line">  E-Mail: mailto:2026355878@qq.com || fa fa-envelope</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置脚标显示：</p>
<p>Powered by Hexo &amp; Next 信息是否显示</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Powered by Hexo &amp; NexT,true or false to display.</span><br><span class="line">  powered: true  # false 不显示</span><br></pre></td></tr></table></figure>

<p>备案信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Beian ICP and gongan information for Chinese users. See: https://beian.miit.gov.cn, http://www.beian.gov.cn</span><br><span class="line">  beian:</span><br><span class="line">    enable: false    # true 开启显示</span><br><span class="line">    icp: 京ICP备 1234567890号-1</span><br><span class="line">    # The digit in the num of gongan beian.</span><br><span class="line">    gongan_id: 1234567890</span><br><span class="line">    # The full num of gongan beian.</span><br><span class="line">    gongan_num: 京公网安备 1234567890号</span><br><span class="line">    # The icon for gongan beian. See: http://www.beian.gov.cn/portal/download</span><br><span class="line">    gongan_icon_url: /uploads/beian.png</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><h3 id="hexo-deployer-git"><a href="#hexo-deployer-git" class="headerlink" title="hexo-deployer-git"></a>hexo-deployer-git</h3><p>插件说明</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 一键部署功能：让你只需一条命令就能将Hexo网站部署到GitHub服务器上。 </span><br></pre></td></tr></table></figure>

<p>安装插件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>修改配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd ~/blog_folder</span><br><span class="line">$ vim _config.yml   # 在文件尾部添加如下代码</span><br><span class="line"></span><br><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class="line">deploy:</span><br><span class="line">  type: git         # 部署类型 git</span><br><span class="line">  repo: https://github.com/shallingzhang/shallingzhang.github.io  # 仓库地址</span><br><span class="line">  branch: main      # 分支名称 mian</span><br><span class="line">  message:          # 自定义提交信息</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="hexo-generator-searchdb"><a href="#hexo-generator-searchdb" class="headerlink" title="hexo-generator-searchdb"></a>hexo-generator-searchdb</h3><p>插件说明</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 搜索数据生成插件:能够生成一个搜索索引文件，该文件包含你的文章的所有必要数据，你可以用这些数据为你的博客编写一个本地搜索引擎。</span><br></pre></td></tr></table></figure>

<p>安装插件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<p>修改配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd ~/blog_folder</span><br><span class="line">$ vim _config.yml       # 在文件尾部添加如下代码</span><br><span class="line"></span><br><span class="line">#Search</span><br><span class="line">## Plugins : hexo-generator-searchdb,local search engine.</span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  content: true</span><br><span class="line">  format: html</span><br><span class="line"></span><br><span class="line">$ vim _config.next.yml  # true，开启本地搜索菜单</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure>

<h3 id="hexo-word-counter"><a href="#hexo-word-counter" class="headerlink" title="hexo-word-counter"></a>hexo-word-counter</h3><p>插件说明</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 在 Hexo 博客站点中统计文章的符号个数和阅读时间</span><br></pre></td></tr></table></figure>

<p>安装插件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-word-counter --save</span><br></pre></td></tr></table></figure>

<p>修改配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd ~/blog_folder</span><br><span class="line">$ vim _config.yml       # 在文件尾部添加如下代码</span><br><span class="line"></span><br><span class="line"># hexo-word-counter</span><br><span class="line">## Plugins : hexo-word-counter,local count engine.</span><br><span class="line">symbols_count_time:</span><br><span class="line">  symbols: true</span><br><span class="line">  time: true</span><br><span class="line">  total_symbols: true</span><br><span class="line">  total_time: true</span><br><span class="line">  exclude_codeblock: false</span><br><span class="line">  awl: 4</span><br><span class="line">  wpm: 275</span><br><span class="line">  suffix: &quot;mins.&quot;</span><br></pre></td></tr></table></figure>



<h2 id="美化"><a href="#美化" class="headerlink" title="美化"></a>美化</h2><h3 id="看板娘"><a href="#看板娘" class="headerlink" title="看板娘"></a>看板娘</h3><p>安装插件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure>

<p>安装模型</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ npm install --save live2d-widget-model-z16</span><br></pre></td></tr></table></figure>

<p>配置显示</p>
<p>请向 Hexo 的 _config.yml 文件或主题的 _config.next.yml 文件中添加配置.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line">  scriptFrom: local</span><br><span class="line">  pluginRootPath: live2dw/</span><br><span class="line">  pluginJsPath: lib/</span><br><span class="line">  pluginModelPath: assets/</span><br><span class="line">  tagMode: false</span><br><span class="line">  log: false</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-z16</span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: 150</span><br><span class="line">    height: 300</span><br><span class="line">  mobile:</span><br><span class="line">    show: true</span><br><span class="line">  react:</span><br><span class="line">    opacity: 0.7</span><br></pre></td></tr></table></figure>

<p>可用模型列表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">live2d-widget-model-chitose</span><br><span class="line">live2d-widget-model-epsilon2_1</span><br><span class="line">live2d-widget-model-gf</span><br><span class="line">live2d-widget-model-haru/01 (use npm install --save live2d-widget-model-haru)</span><br><span class="line">live2d-widget-model-haru/02 (use npm install --save live2d-widget-model-haru)</span><br><span class="line">live2d-widget-model-haruto</span><br><span class="line">live2d-widget-model-hibiki</span><br><span class="line">live2d-widget-model-hijiki</span><br><span class="line">live2d-widget-model-izumi</span><br><span class="line">live2d-widget-model-koharu</span><br><span class="line">live2d-widget-model-miku</span><br><span class="line">live2d-widget-model-ni-j</span><br><span class="line">live2d-widget-model-nico</span><br><span class="line">live2d-widget-model-nietzsche</span><br><span class="line">live2d-widget-model-nipsilon</span><br><span class="line">live2d-widget-model-nito</span><br><span class="line">live2d-widget-model-shizuku</span><br><span class="line">live2d-widget-model-tororo</span><br><span class="line">live2d-widget-model-tsumiki</span><br><span class="line">live2d-widget-model-unitychan</span><br><span class="line">live2d-widget-model-wanko</span><br><span class="line">live2d-widget-model-z16</span><br></pre></td></tr></table></figure>

<p>卸载模型</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ npm uninstall live2d-widget-model-z16</span><br></pre></td></tr></table></figure>

<h3 id="页面圆角与顶部边距"><a href="#页面圆角与顶部边距" class="headerlink" title="页面圆角与顶部边距"></a>页面圆角与顶部边距</h3><p>在站点根目录下的source文件夹中创建_data文件夹，用于存放自定义页面内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ mkdir ~/blog_folder/source/_data</span><br><span class="line">$ cd ~/blog_folder/source/_data</span><br><span class="line">$ touch variables.styl </span><br><span class="line">$ touch styles.styl </span><br></pre></td></tr></table></figure>

<p>配置 variables.styl </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 页面圆角设置</span><br><span class="line">$border-radius-inner     = 18px 18px 18px 18px;</span><br><span class="line">$border-radius           = 18px;</span><br></pre></td></tr></table></figure>

<p>配置 styles.styl </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/* 顶部边距 */</span><br><span class="line">.header,</span><br><span class="line">.main-inner &#123;</span><br><span class="line">  margin-top: 10px;</span><br><span class="line"></span><br><span class="line">  +mobile() &#123;</span><br><span class="line">    margin-top: 0;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 侧边栏圆角 */</span><br><span class="line"></span><br><span class="line">.site-brand-container &#123;</span><br><span class="line">  border-radius: 18px 18px 0 0;</span><br><span class="line"></span><br><span class="line">  +mobile() &#123;</span><br><span class="line">    border-radius: 0 0 0 0;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="背景图片"><a href="#背景图片" class="headerlink" title="背景图片"></a>背景图片</h3><p>自定义背景图片，需要现将自己喜欢的图片（建议大小 200K 以内）放在 source&#x2F;uploads目录下，并重命名为 background</p>
<p>然后配置 source&#x2F;_data&#x2F; styles.styl </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 添加背景图片</span><br><span class="line">body &#123;</span><br><span class="line">      background: url(/uploads/background.jpg); //自己喜欢的图片地址</span><br><span class="line">      background-size: cover;</span><br><span class="line">      background-repeat: no-repeat;</span><br><span class="line">      background-attachment: fixed;</span><br><span class="line">      background-position: 50% 50%;</span><br><span class="line">      @media (prefers-color-scheme: dark) &#123;</span><br><span class="line">        background-image: none;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="页面透明度"><a href="#页面透明度" class="headerlink" title="页面透明度"></a>页面透明度</h3><p>配置 source&#x2F;_data&#x2F; styles.styl </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//博客内容透明化 0-1</span><br><span class="line">//文章内容的透明度设置</span><br><span class="line">.main-inner &#123;</span><br><span class="line">  opacity: 0.8;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//侧边框的透明度设置</span><br><span class="line">.sidebar &#123;</span><br><span class="line">  opacity: 0.8;</span><br><span class="line">&#125;</span><br><span class="line">//菜单栏的透明度设置</span><br><span class="line">.header-inner &#123;</span><br><span class="line">  background: rgba(255,255,255,0.8);</span><br><span class="line">&#125;</span><br><span class="line">//搜索框（local-search）的透明度设置</span><br><span class="line">.popup &#123;</span><br><span class="line">  opacity: 0.9;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="页面加载进度条"><a href="#页面加载进度条" class="headerlink" title="页面加载进度条"></a>页面加载进度条</h3><p>修改主题配置文件 _config.next.yml </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Progress bar in the top during page loading.</span><br><span class="line"># For more information: https://github.com/CodeByZach/pace</span><br><span class="line">pace:</span><br><span class="line">  enable: true    # 开启显示</span><br><span class="line">  # All available colors:</span><br><span class="line">  # black | blue | green | orange | pink | purple | red | silver | white | yellow</span><br><span class="line">  color: blue     # 样式</span><br><span class="line">  # All available themes:</span><br><span class="line">  # big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple</span><br><span class="line">  # corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal</span><br><span class="line">  theme: minimal  # 颜色</span><br></pre></td></tr></table></figure>

<h3 id="背景动画：随机丝带"><a href="#背景动画：随机丝带" class="headerlink" title="背景动画：随机丝带"></a>背景动画：随机丝带</h3><p>修改主题配置文件 _config.next.yml </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Canvas ribbon</span><br><span class="line"># For more information: https://github.com/hustcc/ribbon.js</span><br><span class="line">canvas_ribbon:</span><br><span class="line">  enable: true  # 开启显示</span><br><span class="line">  size: 300 # The width of the ribbon</span><br><span class="line">  alpha: 0.6 # The transparency of the ribbon</span><br><span class="line">  zIndex: -1 # The display level of the ribbon</span><br></pre></td></tr></table></figure>

<h3 id="站点访问统计"><a href="#站点访问统计" class="headerlink" title="站点访问统计"></a>站点访问统计</h3><p>修改主题配置文件 _config.next.yml </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Show Views / Visitors of the website / page with busuanzi.</span><br><span class="line"># For more information: http://ibruce.info/2015/04/04/busuanzi/</span><br><span class="line">busuanzi_count:</span><br><span class="line">  enable: true</span><br><span class="line">  total_visitors: true</span><br><span class="line">  total_visitors_icon: fa fa-user</span><br><span class="line">  total_views: true</span><br><span class="line">  total_views_icon: fa fa-eye</span><br><span class="line">  post_views: true</span><br><span class="line">  post_views_icon: far fa-eye</span><br></pre></td></tr></table></figure>

<h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><p>修改主题配置文件 _config.next.yml </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Font Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Find fonts on Google Fonts (https://fonts.google.com)</span><br><span class="line"># All fonts set here will have the following styles:</span><br><span class="line">#   light | light italic | normal | normal italic | bold | bold italic</span><br><span class="line"># Be aware that setting too much fonts will cause site running slowly</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Web Safe fonts are recommended for `global` (and `title`):</span><br><span class="line"># Arial | Tahoma | Helvetica | Times New Roman | Courier New | Verdana | Georgia | Palatino | Garamond | Comic San</span><br><span class="line"> MS | Trebuchet MS</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">font:</span><br><span class="line">  enable: true</span><br><span class="line"></span><br><span class="line">  # Uri of fonts host, e.g. https://fonts.googleapis.com (Default).</span><br><span class="line">  host:  </span><br><span class="line"> </span><br><span class="line">  # Font options:</span><br><span class="line">  # `external: true` will load this font family from `host` above.</span><br><span class="line">  # `family: Times New Roman`. Without any quotes.</span><br><span class="line">  # `size: x.x`. Use `em` as unit. Default: 1 (16px)</span><br><span class="line"></span><br><span class="line">  # Global font settings used for all elements inside &lt;body&gt;.</span><br><span class="line">  global:</span><br><span class="line">    external: true</span><br><span class="line">    family: Lato</span><br><span class="line">    size:</span><br><span class="line"></span><br><span class="line">  # Font settings for site title (.site-title).</span><br><span class="line">  title:</span><br><span class="line">    external: true</span><br><span class="line">    family:</span><br><span class="line">    size:</span><br><span class="line"></span><br><span class="line">  # Font settings for headlines (&lt;h1&gt; to &lt;h6&gt;).</span><br><span class="line">  headings:</span><br><span class="line">    external: true</span><br><span class="line">    family:</span><br><span class="line">    size:</span><br><span class="line"></span><br><span class="line">  # Font settings for posts (.post-body).</span><br><span class="line">  posts:</span><br><span class="line">    external: true</span><br><span class="line">    family:</span><br><span class="line"></span><br><span class="line">  # Font settings for &lt;code&gt; and code blocks.</span><br><span class="line">  codes:</span><br><span class="line">    external: true</span><br><span class="line">    family:</span><br></pre></td></tr></table></figure>

<h3 id="鼠标"><a href="#鼠标" class="headerlink" title="鼠标"></a>鼠标</h3><p>安装fireworks点击特效动画</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install next-theme/hexo-next-fireworks  # Fireworks animation for NexT.</span><br></pre></td></tr></table></figure>

<h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">codeblock:</span><br><span class="line">  # Code Highlight theme</span><br><span class="line">  # All available themes: https://theme-next.js.org/highlight/</span><br><span class="line">  theme:  # 代码块主题配色</span><br><span class="line">    #light: default</span><br><span class="line">    #dark: stackoverflow-dark</span><br><span class="line">    light: base16/tomorrow-night</span><br><span class="line">    dark: base16/tomorrow-night</span><br><span class="line">  prism:</span><br><span class="line">    light: prism</span><br><span class="line">    dark: prism-dark</span><br><span class="line">  # Add copy button on codeblock</span><br><span class="line">  copy_button:</span><br><span class="line">    enable: true   # 启用复制按钮</span><br><span class="line">    # Available values: default | flat | mac</span><br><span class="line">    style: default</span><br></pre></td></tr></table></figure>



<h2 id="关于-hexo-helper-live2d-与-busuanzi-count-冲突"><a href="#关于-hexo-helper-live2d-与-busuanzi-count-冲突" class="headerlink" title="关于 hexo-helper-live2d 与 busuanzi-count 冲突"></a>关于 hexo-helper-live2d 与 busuanzi-count 冲突</h2><p><a href="https://zerobio.github.io/archives/c9759728.html">https://zerobio.github.io/archives/c9759728.html</a></p>
<h2 id="参考站点"><a href="#参考站点" class="headerlink" title="参考站点"></a>参考站点</h2><p><a href="https://vkali.com/categories/Hexo/">https://vkali.com/categories/Hexo/</a></p>
<p><a href="http://yearito.cn/categories/">http://yearito.cn/categories/</a></p>
<p><a href="https://pinlyu.com/">https://pinlyu.com/</a></p>
<p><a href="https://github.com/next-theme/awesome-next">https://github.com/next-theme/awesome-next</a></p>
<p><a href="https://zerobio.github.io/archives/c9759728.html">https://zerobio.github.io/archives/c9759728.html</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
        <tag>主题</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/08/19/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>关于hexo-helper-live2d与busuanzi-count冲突</title>
    <url>/2022/09/07/%E5%85%B3%E4%BA%8Ehexo-helper-live2d%E4%B8%8Ebusuanzi-count%E5%86%B2%E7%AA%81/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在我安装了 <code>hexo-helper-live2d</code> 插件配置了网页宠物之后，发现 <code>busuanzi</code> 统计功能失效了，那我们有必要重新将它开启。</p>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>我的 <code>Next</code> 主题的 <code>version</code> 是 <code>8.10.1</code>；<code>Next</code> 主题关于 <code>live2d</code> 和 <code>busuanzi</code> 的不兼容性，官方也在 <code>Github issue</code> 上进行了讨论，但是也没有很好的解决办法。有兴趣的同学可以自行前往 <code>Github issue</code> 查看。</p>
<p><code>Github issue:</code> <a href="https://github.com/EYHN/hexo-helper-live2d/issues/161">https://github.com/EYHN/hexo-helper-live2d/issues/161</a></p>
<p><code>https://boyinthesun.cn/post/error-live2d-busuanzi/</code> 我根据 <code>Github issue</code> 提供的解决办法，针对于 <code>Next-8.10.1</code> 失败，并没有解决我的问题，于是在 <code>https://boyinthesun.cn/post/error-live2d-busuanzi/</code> 基础上，终于通过下面的办法实现了这两个插件的共存。</p>
<p>通过查看网页源码，发现在 <code>busuanzi</code> 插入的 <code>&lt;span&gt;</code> 标签中多了个 <code>style</code>。</p>
<p><a href="https://zerobio.github.io/images/image-20220312231832625.png"><img src="https://zerobio.github.io/images/image-20220312231832625.png" alt="img"></a></p>
<p><code>style=&quot;display: none;&quot;</code> 这个样式存在代表着这个区块将不会才页面中显示；而当我们将 <code>none</code> 修改成 <code>inline</code> 之后，会发现当前页面中的 <code>阅读次数：</code> 出现了，于是我们找到了问题所在。</p>
<span id="more"></span>

<h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>同 <code>https://boyinthesun.cn/post/error-live2d-busuanzi/</code> 帖子提到的办法，先将 <code>busuanzi.pure.mini.js</code> 下载到本地，并存放至 <code>&lt;hexo-site&gt;/node_modules/hexo-theme-next/source/js/</code> ；接着我们找到 <code>Next</code> 主题关于 <code>busuanzi</code> 的设置。对于新手来说，很难找到这个 <code>.njk</code>。于是我们可以在站点根目录下通过 <code>find</code> 命令来查找关键字。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd &lt;hexo-site&gt;</span><br><span class="line">find ./ -name &quot;busuanzi*&quot;</span><br><span class="line">## 输出结果</span><br><span class="line">## ./node_modules/hexo-theme-next/layout/_third-party/statistics/busuanzi-counter.njk</span><br></pre></td></tr></table></figure>

<p>于是我们找到了 <code>./node_modules/hexo-theme-next/layout/_third-party/statistics/busuanzi-counter.njk</code> 发现里面是这样的。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;%- if theme.busuanzi_count.enable %&#125;</span><br><span class="line">  &lt;script&#123;&#123; pjax &#125;&#125; async src=&quot;https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure>

<p>这里是通过 <code>url</code> 插入 <code>busuanzi</code> 的，但是我们需要对这个 <code>js</code> 文件进行修改，于是我们需要将这个文件下载到本地</p>
<p>将 <code>https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js</code> 下载至 <code>&lt;hexo-site&gt;/node_modules/hexo-theme-next/source/js/</code>，并将 <code>./node_modules/hexo-theme-next/layout/_third-party/statistics/busuanzi-counter.njk</code> 修改至下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;%- if theme.busuanzi_count.enable %&#125;</span><br><span class="line">  &lt;script&#123;&#123; pjax &#125;&#125; async src=&quot;/js/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure>

<p>对 <code>&lt;hexo-site&gt;/source/js/busuanzi.pure.mini.js</code> 修改如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var bszCaller,bszTag;!function()&#123;var c,d,e,a=!1,b=[];ready=function(c)&#123;return a||&quot;interactive&quot;===document.readyState||&quot;complete&quot;===document.readyState?c.call(document):b.push(function()&#123;return c.call(this)&#125;),this&#125;,d=function()&#123;for(var a=0,c=b.length;c&gt;a;a++)b[a].apply(document);b=[]&#125;,e=function()&#123;a||(a=!0,d.call(window),document.removeEventListener?document.removeEventListener(&quot;DOMContentLoaded&quot;,e,!1):document.attachEvent&amp;&amp;(document.detachEvent(&quot;onreadystatechange&quot;,e),window==window.top&amp;&amp;(clearInterval(c),c=null)))&#125;,document.addEventListener?document.addEventListener(&quot;DOMContentLoaded&quot;,e,!1):document.attachEvent&amp;&amp;(document.attachEvent(&quot;onreadystatechange&quot;,function()&#123;/loaded|complete/.test(document.readyState)&amp;&amp;e()&#125;),window==window.top&amp;&amp;(c=setInterval(function()&#123;try&#123;a||document.documentElement.doScroll(&quot;left&quot;)&#125;catch(b)&#123;return&#125;e()&#125;,5)))&#125;(),bszCaller=&#123;fetch:function(a,b)&#123;var c=&quot;BusuanziCallback_&quot;+Math.floor(1099511627776*Math.random());window[c]=this.evalCall(b),a=a.replace(&quot;=BusuanziCallback&quot;,&quot;=&quot;+c),scriptTag=document.createElement(&quot;SCRIPT&quot;),scriptTag.type=&quot;text/javascript&quot;,scriptTag.defer=!0,scriptTag.src=a,scriptTag.referrerPolicy=&quot;no-referrer-when-downgrade&quot;,document.getElementsByTagName(&quot;HEAD&quot;)[0].appendChild(scriptTag)&#125;,evalCall:function(a)&#123;return function(b)&#123;ready(function()&#123;try&#123;a(b),scriptTag.parentElement.removeChild(scriptTag)&#125;catch(c)&#123;bszTag.hides()&#125;&#125;)&#125;&#125;&#125;,bszCaller.fetch(&quot;//busuanzi.ibruce.info/busuanzi?jsonpCallback=BusuanziCallback&quot;,function(a)&#123;bszTag.texts(a),bszTag.shows()&#125;),bszTag=&#123;bszs:[&quot;site_pv&quot;,&quot;page_pv&quot;,&quot;site_uv&quot;],texts:function(a)&#123;this.bszs.map(function(b)&#123;var c=document.getElementById(&quot;busuanzi_value_&quot;+b);c&amp;&amp;(c.innerHTML=a[b])&#125;)&#125;,hides:function()&#123;this.bszs.map(function(a)&#123;var b=document.getElementById(&quot;busuanzi_container_&quot;+a);b&amp;&amp;(b.style.display=&quot;inline&quot;)&#125;)&#125;,shows:function()&#123;this.bszs.map(function(a)&#123;var b=document.getElementById(&quot;busuanzi_container_&quot;+a);b&amp;&amp;(b.style.display=&quot;inline&quot;)&#125;)&#125;&#125;;</span><br></pre></td></tr></table></figure>

<p>你可以直接复制粘贴覆盖之前的 <code>busuanzi.pure.mini.js</code>，或者找到 <code>b.style.display=&quot;none&quot;</code> 修改为 <code>b.style.display=&quot;inline&quot;</code></p>
<p>最后直接 <code>hexo clean &amp;&amp; hexo s</code> 重启服务即可。</p>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p>[1] <a href="https://boyinthesun.cn/post/error-live2d-busuanzi/">https://boyinthesun.cn/post/error-live2d-busuanzi/</a></p>
<h2 id="转载声明"><a href="#转载声明" class="headerlink" title="转载声明"></a>转载声明</h2><p>免责声明：<br>    本文转自网络文章，转载此文章仅为个人收藏，分享知识，如有侵权，请联系博主进行删除。</p>
<p>原文作者：zerobio </p>
<p>原文地址：<a href="https://zerobio.github.io/archives/c9759728.html">https://zerobio.github.io/archives/c9759728.html</a></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>next</tag>
        <tag>live2d</tag>
        <tag>busuanzi</tag>
      </tags>
  </entry>
</search>
